version: '3.1'

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.4.13
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    image: bitnami/kafka:2.6.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=EXTERNAL://:9092,PLAINTEXT://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://localhost:9092,PLAINTEXT://kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=1
    depends_on:
      - zookeeper

  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb
    ports:
      - "8085:8000"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
#    image: caca.com/provectuslabs/kafka-ui:v0.7.1-glue-serde-v1.1.0
    container_name: kafka-ui
    ports:
      - "8888:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093

#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=b-3.dataproduct.s9sxq7.c8.kafka.eu-west-1.amazonaws.com:9098,b-1.dataproduct.s9sxq7.c8.kafka.eu-west-1.amazonaws.com:9098,b-2.dataproduct.s9sxq7.c8.kafka.eu-west-1.amazonaws.com:9098
#      - KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL=SASL_SSL
#      - KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM=AWS_MSK_IAM
#      - KAFKA_CLUSTERS_0_PROPERTIES_SASL_CLIENT_CALLBACK_HANDLER_CLASS=software.amazon.msk.auth.iam.IAMClientCallbackHandler
#      - KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG=software.amazon.msk.auth.iam.IAMLoginModule required;
#      - kafka.clusters.0.serde.0.name=GlueSchemaRegistry
#      - kafka.clusters.0.serde.0.filePath=/build/kafka-ui-glue-sr-serde.jar
#      - kafka.clusters.0.serde.0.className=com.provectus.kafka.ui.serdes.glue.GlueSerde
#      - kafka.clusters.0.serde.0.properties.region=eu-west-1  #required
#      - kafka.clusters.0.serde.0.properties.registry=realtime-data-product #required, name of Glue Schema Registry
#      # template that will be used to find schema name for topic key. Optional, default is null (not set).
#      # - kafka.clusters.0.serde.0.properties.keySchemaNameTemplate="%s-key"
#      # template that will be used to find schema name for topic value. Optional, default is  '%s'
#      # - kafka.clusters.0.serde.0.properties.valueSchemaNameTemplate="%s-value"
#      # schema name -> topics pattern where it will be used for keys. Optional.
#      - kafka.clusters.0.serde.0.properties.topicKeysSchemas.some-topic-key="some-topic1|some-topic2"
#      # schema name -> topics pattern where it will be used for values. Optional.
#      - kafka.clusters.0.serde.0.properties.topicValuesSchemas.some-topic-value="some-topic1|some-topic2"
#      - kafka.clusters.0.serde.0.properties.topicValuesSchemas.another-topic-val="another-topic-value"
